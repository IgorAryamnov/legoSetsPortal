{"version":3,"file":"static/js/298.96b45b7e.chunk.js","mappings":"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","sources":["Pages/favorite/components/FavoriteProduct.jsx","Pages/favorite/components/FavoriteProductSearch.jsx","Pages/favorite/components/FavoriteList.jsx","Pages/favorite/FavoritePage.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { deleteFromFavorite } from \"../../../features/favoriteStore\";\r\nimport { deleteFromFavoriteProducts } from \"../../../features/favoriteFullInformation\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 2px solid var(--green);\r\n  border-radius: 30px;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\nconst StyledButton = styled.button`\r\n  margin-right: 10px;\r\n  border: 1px solid var(--orange);\r\n  outline: none;\r\n  background-color: var(--orange);\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    cursor: pointer;\r\n    border: 1px solid var(--green);\r\n    color: var(--grey);\r\n  }\r\n`;\r\nconst ProductName = styled(Link)`\r\n  color: #ffe400;\r\n  font-size: 30px;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    cursor: pointer;\r\n    color: var(--grey);\r\n  }\r\n`;\r\n\r\nexport function FavoriteProduct({ data }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <img\r\n          style={{ borderRadius: \"30px 0px 0px 30px\" }}\r\n          height=\"200px\"\r\n          width=\"200px\"\r\n          src={data.product.set_img_url}\r\n          alt=\"favorite-product-img\"\r\n        />\r\n        <ProductName to={`/favorite/${data.product.set_num}`}>\r\n          {data.product.name}\r\n        </ProductName>\r\n        <StyledButton\r\n          onClick={() => {\r\n            dispatch(\r\n              deleteFromFavorite({\r\n                favoriteId: data.product.set_num,\r\n                user: data.user,\r\n              })\r\n            );\r\n            dispatch(\r\n              deleteFromFavoriteProducts({\r\n                favoriteId: data.product.set_num,\r\n                user: data.user,\r\n              })\r\n            );\r\n          }}\r\n        >\r\n          Удалить из избранного\r\n        </StyledButton>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nFavoriteProduct.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useGetFavoriteProductQuery } from \"../../../features/baseApi\";\r\nimport { useEffect } from \"react\";\r\nimport { addToFavoriteProducts } from \"../../../features/favoriteFullInformation\";\r\nimport { FavoriteProduct } from \"./FavoriteProduct\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { ProductSkeletonView } from \"../../../Components/ProductSkeletonView\";\r\n\r\nconst Message = styled.p`\r\n  color: var(--green);\r\n`;\r\nconst style = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  border: \"2px solid var(--green)\",\r\n  borderRadius: \"30px\",\r\n  width: \"100%\",\r\n  marginBottom: \"20px\",\r\n};\r\n\r\nexport function FavoriteProductSearch({ id, user }) {\r\n  const dispatch = useDispatch();\r\n\r\n  let reduxCheck = false;\r\n  let dataFromRedux = undefined;\r\n\r\n  const favoriteSlice = useSelector(\r\n    (state) => state.favoriteProducts.favoriteProducts\r\n  );\r\n\r\n  if (favoriteSlice[user]) {\r\n    let currentProduct = favoriteSlice[user].find(\r\n      (value) => value.set_num === id\r\n    );\r\n\r\n    if (currentProduct) {\r\n      reduxCheck = true;\r\n      dataFromRedux = currentProduct;\r\n    }\r\n  }\r\n\r\n  const { data, error, isFetching } = useGetFavoriteProductQuery(\r\n    \"https://rebrickable.com/api/v3/lego/sets/\" + id,\r\n    { skip: reduxCheck }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch(\r\n        addToFavoriteProducts({ user: user, favoriteInformation: data })\r\n      );\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Message>Oh no, there was an error</Message>\r\n      ) : isFetching ? (\r\n        <ProductSkeletonView style={style} />\r\n      ) : (\r\n        <FavoriteProduct\r\n          data={{ user: user, product: data || dataFromRedux }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nFavoriteProductSearch.propTypes = {\r\n  id: PropTypes.string,\r\n  user: PropTypes.string,\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { FavoriteProductSearch } from \"./FavoriteProductSearch\";\r\nimport { Paginator } from \"../../../Components/Paginator\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  decreaseFavoritePage,\r\n  increaseFavoritePage,\r\n} from \"../../../features/favoritePageCounter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function FavoriteList({ data }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const page = useSelector((state) => state.favoritePage.favoritePage);\r\n\r\n  let currentArray = data.data.slice(5 * (page - 1), 5 * page);\r\n\r\n  function leftClick() {\r\n    if (page > 1) {\r\n      dispatch(decreaseFavoritePage());\r\n    }\r\n  }\r\n  function rightClick() {\r\n    if (data.data.length / 5 > page) {\r\n      dispatch(increaseFavoritePage());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\" }}>\r\n        {currentArray.map((value) => {\r\n          return (\r\n            <FavoriteProductSearch key={value} id={value} user={data.user} />\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <Paginator\r\n          counter={page}\r\n          leftCircleFunction={leftClick}\r\n          rightCircleFunction={rightClick}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nFavoriteList.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FavoriteList } from \"./components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: auto;\r\n  margin-top: 30px;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default function FavoritePage() {\r\n  let navigate = useNavigate();\r\n  let logSlice = useSelector((state) => state.log.loginState);\r\n  let favoriteSlice = useSelector((state) => state.favorite.favorite);\r\n\r\n  useEffect(() => {\r\n    if (!logSlice.loggedIn) {\r\n      navigate(\"/authorization\");\r\n    }\r\n  }, [logSlice.loggedIn, navigate]);\r\n\r\n  return (\r\n    <Container>\r\n      {favoriteSlice[logSlice.user]?.length ? (\r\n        <FavoriteList\r\n          data={{ data: favoriteSlice[logSlice.user], user: logSlice.user }}\r\n        />\r\n      ) : (\r\n        <p style={{ color: \"var(--green)\" }}>\r\n          Увы, вы ничего не добавили в избранное!\r\n        </p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledButton","button","_templateObject2","ProductName","Link","_templateObject3","FavoriteProduct","_ref","data","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","style","borderRadius","height","width","src","product","set_img_url","alt","to","concat","set_num","name","onClick","deleteFromFavorite","favoriteId","user","deleteFromFavoriteProducts","Message","p","display","alignItems","justifyContent","border","marginBottom","FavoriteProductSearch","id","dataFromRedux","reduxCheck","favoriteSlice","useSelector","state","favoriteProducts","currentProduct","find","value","error","isFetching","useGetFavoriteProductQuery","skip","useEffect","addToFavoriteProducts","favoriteInformation","ProductSkeletonView","FavoriteList","page","favoritePage","currentArray","slice","map","Paginator","counter","leftCircleFunction","decreaseFavoritePage","rightCircleFunction","length","increaseFavoritePage","FavoritePage","_favoriteSlice$logSli","navigate","useNavigate","logSlice","log","loginState","favorite","loggedIn","color"],"sourceRoot":""}