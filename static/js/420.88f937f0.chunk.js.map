{"version":3,"file":"static/js/420.88f937f0.chunk.js","mappings":"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","sources":["Pages/registration/components/SuccessfulWindowView.jsx","Pages/registration/components/RegistrationForm.jsx","hooks/useDebounce.js","Pages/registration/RegistrationPage.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { LogoWithLinkView } from \"../../../Components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: auto;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n`;\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 20px;\r\n  border: 2px solid var(--green);\r\n`;\r\nconst MessageTitle = styled.h1`\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  background: var(--green);\r\n  border-radius: 16px 16px 0px 0px;\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  padding: 5px 0px 10px 0px;\r\n  border-radius: 0px 0px 16px 16px;\r\n  background: var(--orange);\r\n  color: black;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    color: var(--grey);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport function SuccessFulWindowView() {\r\n  return (\r\n    <Container>\r\n      <LogoWithLinkView />\r\n      <MessageContainer>\r\n        <MessageTitle>Поздравляем!</MessageTitle>\r\n        <p\r\n          style={{\r\n            margin: \"10px 10px 15px 10px\",\r\n            fontSize: 20,\r\n            color: \"#ffe400\",\r\n          }}\r\n        >\r\n          Вы успешно зарегестрировались!\r\n        </p>\r\n        <StyledLink to=\"/authorization\">Войти</StyledLink>\r\n      </MessageContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import { Form, Input } from \"antd\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"../../../hooks/useDebounce\";\r\n\r\nconst StyledForm = styled(Form)`\r\n  width: 350px;\r\n  padding: 20px;\r\n\r\n  .submit-button {\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0px;\r\n  }\r\n`;\r\nconst StyledInput = styled(Input)`\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus-visible,\r\n  &:focus-within {\r\n    border: 1px solid var(--green);\r\n    box-shadow: none;\r\n  }\r\n`;\r\nconst StyledButton = styled.button`\r\n  width: 200px;\r\n  background-color: var(--orange);\r\n  font-size: 14px;\r\n  height: 32px;\r\n  border-radius: 6px;\r\n  padding: 0px;\r\n  border: none;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    cursor: pointer;\r\n    border: 1px solid var(--green);\r\n  }\r\n`;\r\n\r\nexport function RegistrationForm({ succ }) {\r\n  const [usernameInput, setUsernameInput] = useState(\"\");\r\n  const debouncedInput = useDebounce(usernameInput, 500);\r\n  const [validator, setValidator] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    if (debouncedInput) {\r\n      let users = JSON.parse(localStorage.getItem(\"users\"));\r\n      if (users[debouncedInput]) {\r\n        setValidator(true);\r\n      } else {\r\n        setValidator(false);\r\n      }\r\n    } else {\r\n      setValidator(false);\r\n    }\r\n  }, [debouncedInput]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedInput) {\r\n      form.validateFields([\"username\"]);\r\n    }\r\n  }, [validator]);\r\n\r\n  const onFinish = (values) => {\r\n    let users = JSON.parse(localStorage.getItem(\"users\"));\r\n    users[values.username] = values.password;\r\n    localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n    succ(true);\r\n  };\r\n\r\n  return (\r\n    <StyledForm name=\"login\" onFinish={onFinish} form={form}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Пожалуйста, введите логин\",\r\n          },\r\n          () => ({\r\n            validator(_, value) {\r\n              if (/[^a-zA-Z0-9]/.test(value)) {\r\n                return Promise.reject(\r\n                  new Error(\r\n                    \"Пожалуйста, используйте только английские буквы и цифры!\"\r\n                  )\r\n                );\r\n              }\r\n              if (!value || value.length > 4) {\r\n                if (validator) {\r\n                  return Promise.reject(\r\n                    new Error(\"Данное имя пользователя уже используется!\")\r\n                  );\r\n                }\r\n                return Promise.resolve();\r\n              } else {\r\n                return Promise.reject(\r\n                  new Error(\"Имя пользователя слишком короткое!\")\r\n                );\r\n              }\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <StyledInput\r\n          prefix={<UserOutlined />}\r\n          placeholder=\"Логин\"\r\n          onChange={(e) => setUsernameInput(e.target.value)}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Пожалуйста, введите пароль!\",\r\n          },\r\n          () => ({\r\n            validator(_, value) {\r\n              if (!value || value.length > 4) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(new Error(\"Пароль слишком короткий!\"));\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <StyledInput\r\n          prefix={<LockOutlined />}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"submit-password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Пожалуйста, подтвердите пароль!\",\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue(\"password\") === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(new Error(\"Пароли не совпадают!\"));\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <StyledInput\r\n          prefix={<LockOutlined />}\r\n          type=\"password\"\r\n          placeholder=\"Повторите пароль\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"submit-button\">\r\n        <StyledButton htmlType=\"submit\">Зарегистрироваться</StyledButton>\r\n      </Form.Item>\r\n    </StyledForm>\r\n  );\r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n  succ: PropTypes.func,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { LogoWithLinkView } from \"../../Components\";\r\nimport { SuccessFulWindowView } from \"./components\";\r\nimport { RegistrationForm } from \"./components\";\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: auto;\r\n  height: 100vh;\r\n`;\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst FormWithOutLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  border-radius: 20px;\r\n  border: 2px solid var(--green);\r\n\r\n  h1 {\r\n    margin-top: 0px;\r\n    padding-top: 20px;\r\n  }\r\n`;\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--green);\r\n  border-radius: 15px 15px 0px 0px;\r\n`;\r\n\r\nexport default function RegistrationPage() {\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n  let logSlice = useSelector((state) => state.log.loginState);\r\n\r\n  useEffect(() => {\r\n    if (logSlice.loggedIn) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [logSlice.loggedIn, navigate]);\r\n\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <SuccessFulWindowView />\r\n      ) : (\r\n        <FormContainer>\r\n          <div>\r\n            <LogoContainer>\r\n              <LogoWithLinkView />\r\n            </LogoContainer>\r\n            <FormWithOutLogo>\r\n              <TitleContainer>\r\n                <h1>Регистрация</h1>\r\n              </TitleContainer>\r\n              <RegistrationForm succ={setSuccess} />\r\n            </FormWithOutLogo>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","MessageContainer","_templateObject2","MessageTitle","h1","_templateObject3","StyledLink","Link","_templateObject4","SuccessFulWindowView","_jsxs","children","_jsx","LogoWithLinkView","style","margin","fontSize","color","to","StyledForm","Form","StyledInput","Input","StyledButton","button","RegistrationForm","_ref","succ","usernameInput","setUsernameInput","useState","debouncedInput","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","validator","setValidator","form","useForm","JSON","parse","localStorage","getItem","validateFields","name","onFinish","values","users","username","password","setItem","stringify","Item","rules","required","message","_","test","Promise","reject","Error","length","resolve","prefix","UserOutlined","placeholder","onChange","e","target","LockOutlined","type","_ref2","getFieldValue","className","htmlType","FormContainer","LogoContainer","FormWithOutLogo","TitleContainer","RegistrationPage","success","setSuccess","navigate","useNavigate","logSlice","useSelector","state","log","loginState","loggedIn","_Fragment"],"sourceRoot":""}