{"version":3,"file":"static/js/406.c0636ced.chunk.js","mappings":"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","sources":["Pages/authorization/components/LogInForm.jsx","Pages/authorization/AuthorizationPage.jsx"],"sourcesContent":["import { Form, Input } from \"antd\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"../../../features/loginState\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StyledForm = styled(Form)`\r\n  width: 350px;\r\n  padding: 20px;\r\n\r\n  .ant-form-item-control-input-content {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n  .login-button {\r\n    margin: 0px;\r\n  }\r\n`;\r\nconst StyledInput = styled(Input)`\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus-visible,\r\n  &:focus-within {\r\n    border: 1px solid var(--green);\r\n    box-shadow: none;\r\n  }\r\n`;\r\nconst StyledButton = styled.button`\r\n  width: 200px;\r\n  background-color: var(--orange);\r\n  font-size: 14px;\r\n  height: 32px;\r\n  border-radius: 6px;\r\n  padding: 0px;\r\n  border: none;\r\n  margin-bottom: 10px;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    cursor: pointer;\r\n    border: 1px solid var(--green);\r\n  }\r\n`;\r\nconst SwitchForm = styled(Link)`\r\n  padding: 0px;\r\n  border: none;\r\n  background: none;\r\n  color: #ffe400;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    color: var(--grey);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport function LogInForm() {\r\n  const [formValidation, setFormValidation] = useState(false);\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n\r\n  const onFinish = (values) => {\r\n    let users = JSON.parse(localStorage.getItem(\"users\"));\r\n    if (users[values.username] !== values.password) {\r\n      setFormValidation(true);\r\n    } else {\r\n      dispatch(logIn({ loggedIn: true, user: values.username }));\r\n      navigate(-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledForm name=\"login\" onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Пожалуйста, введите имя пользователя!\",\r\n          },\r\n        ]}\r\n      >\r\n        <StyledInput prefix={<UserOutlined />} placeholder=\"Логин\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Пожалуйста, введите пароль!\",\r\n          },\r\n        ]}\r\n      >\r\n        <StyledInput\r\n          prefix={<LockOutlined />}\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n        />\r\n      </Form.Item>\r\n      {formValidation ? (\r\n        <p style={{ color: \"red\", textAlign: \"center\", marginTop: 0 }}>\r\n          Имя пользователя или пароль указаны неверно!\r\n        </p>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Form.Item className=\"login-button\">\r\n        <StyledButton type=\"submit\">Войти</StyledButton>\r\n        <SwitchForm to=\"/authorization/registration\">Нет аккаунта?</SwitchForm>\r\n      </Form.Item>\r\n    </StyledForm>\r\n  );\r\n}\r\n\r\nLogInForm.propTypes = {\r\n  changeForm: PropTypes.func,\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { LogoWithLinkView } from \"../../Components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { LogInForm } from \"./components\";\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: auto;\r\n  height: 100vh;\r\n`;\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst FormWithOutLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  border-radius: 20px;\r\n  border: 2px solid var(--green);\r\n\r\n  h1 {\r\n    margin-top: 0px;\r\n    padding-top: 20px;\r\n  }\r\n`;\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--green);\r\n  border-radius: 15px 15px 0px 0px;\r\n`;\r\n\r\nexport default function AuthorizationPage() {\r\n  let navigate = useNavigate();\r\n  let logSlice = useSelector((state) => state.log.loginState);\r\n\r\n  useEffect(() => {\r\n    if (logSlice.loggedIn) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [logSlice.loggedIn, navigate]);\r\n\r\n  return (\r\n    <FormContainer>\r\n      <div>\r\n        <LogoContainer>\r\n          <LogoWithLinkView />\r\n        </LogoContainer>\r\n\r\n        <FormWithOutLogo>\r\n          <TitleContainer>\r\n            <h1>Вход</h1>\r\n          </TitleContainer>\r\n          <LogInForm />\r\n        </FormWithOutLogo>\r\n      </div>\r\n    </FormContainer>\r\n  );\r\n}\r\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledInput","Input","_templateObject2","StyledButton","button","_templateObject3","SwitchForm","Link","_templateObject4","LogInForm","formValidation","setFormValidation","useState","dispatch","useDispatch","navigate","useNavigate","_jsxs","name","onFinish","values","JSON","parse","localStorage","getItem","username","password","logIn","loggedIn","user","children","_jsx","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","style","color","textAlign","marginTop","_Fragment","className","to","FormContainer","div","LogoContainer","FormWithOutLogo","TitleContainer","AuthorizationPage","logSlice","useSelector","state","log","loginState","useEffect","LogoWithLinkView"],"sourceRoot":""}