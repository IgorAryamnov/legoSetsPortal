{"version":3,"file":"static/js/162.15e53a4d.chunk.js","mappings":"oRAKA,MAAMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2UAoBxB,SAASC,EAAeC,GAAY,IAAX,KAAEC,GAAMD,EACtC,OACEE,EAAAA,EAAAA,KAACR,EAAU,CACTS,OACED,EAAAA,EAAAA,KAAA,OACEE,MAAO,IACPC,OAAQ,IACRC,IAAI,gBACJC,IAAKN,EAAKO,cAEbC,UAEDP,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,MAAOV,EAAKW,QAGxB,C,oBC/BA,MAAMC,EAAgBlB,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAK1BiB,EAAgBpB,EAAAA,GAAOqB,EAACC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,sDAIxBoB,GAAavB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAYyB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,0LAYxB,SAASuB,IACd,MAAMC,GAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKA,OAC9CC,GAAgBH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,SAASC,YACtDC,GAAYC,EAAAA,EAAAA,YAAWC,GACvBC,GAAWC,EAAAA,EAAAA,MAkBjB,OAAKP,EAAcJ,IAKjBY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA1B,SAAA,EACEP,EAAAA,EAAAA,KAACa,EAAa,CAAAN,SAAA,oDAAA2B,OACM,IAAjBd,EAAY,GAAUI,EAAcJ,GAAWe,QAAQC,OAAM,kBAAAF,OACzDV,EAAcJ,GAAWiB,MAAK,iDACD,IAAnCb,EAAcJ,GAAWiB,OACxBrC,EAAAA,EAAAA,KAACa,EAAa,CAACyB,MAAO,CAAEC,MAAO,iBAAkBhC,SAAC,0NAIlDP,EAAAA,EAAAA,KAACW,EAAa,CAAAJ,SACXiB,EAAcJ,GAAWe,QAAQK,KAAI,CAACC,EAAOC,KAC5C,IAAIC,EAAI,GAAAT,OAAMd,EAAS,KAAAc,OAAIO,EAAMG,SAEjC,OACE5C,EAAAA,EAAAA,KAACgB,EAAU,CACTsB,MAAO,CACLO,OAAQ,GACRC,eAAgB,OAChBC,QAAS,QAGXC,GAAIL,EAAKpC,UAETP,EAAAA,EAAAA,KAACH,EAAe,CAACE,KAAM0C,KAHlBA,EAAMG,QAIA,OAKrB5C,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACRC,QAAS9B,EACT+B,mBApDN,WACoB,IAAd/B,GAGJU,GAASsB,EAAAA,EAAAA,MACX,EAgDMC,oBA9CN,WACE,IAAIC,EAAS9B,EAAcJ,GAAWmC,KACvB,OAAXD,IAGJ3B,EAAU2B,GACVxB,GAAS0B,EAAAA,EAAAA,OACX,OAGS,IAwCX,C,gBC1FA,MAAM7C,EAAgBlB,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAK1B0C,EAAQ,CACZpC,MAAO,QACPC,OAAQ,QACRsD,OAAQ,yBACRC,aAAc,MACdb,OAAQ,OACRc,SAAU,UAGL,SAASC,IACd,OACE5B,EAAAA,EAAAA,MAACrB,EAAa,CAAAJ,SAAA,EACZP,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,KAC5BtC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAmB,CAACvB,MAAOA,MAGlC,C,MCvBA,MAAMwB,EAAYrE,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAMrB,SAASmE,EAAcjE,GAAqB,IAApB,IAAEkE,EAAG,SAAEC,GAAUnE,EAC9C,MAAMgC,GAAWC,EAAAA,EAAAA,MAEXX,GAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKA,OAC9CC,GAAgBH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,SAASC,aAEtD,KAAE3B,EAAI,MAAEmE,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,IAAoBJ,EAAK,CAC3DK,OAAUL,IAAOxC,EAAcJ,MAYjC,OATAkD,EAAAA,EAAAA,YAAU,KACJvE,GACF+B,GAASyC,EAAAA,EAAAA,IAAsB,CAAEhD,KAAMH,EAAWrB,KAAMA,IAC1D,GACC,CAACA,KACJuE,EAAAA,EAAAA,YAAU,KACRL,EAASE,EAAW,GACnB,CAACA,KAGFnE,EAAAA,EAAAA,KAAC8D,EAAS,CAAAvD,SACP2D,GACClE,EAAAA,EAAAA,KAAA,KAAGsC,MAAO,CAAEC,MAAO,gBAAiBhC,SAAC,8BACnC4D,GACFnE,EAAAA,EAAAA,KAAC4D,EAAmB,KAEpB5D,EAAAA,EAAAA,KAACmB,EAAY,KAIrB,C,gCCvCA,MAAMqD,EAAkB/E,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kFAK5B6E,EAAchF,EAAAA,GAAOqB,EAACC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0DAItBkE,EAAYrE,EAAAA,GAAOmB,IAAGM,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,4BAGtB8E,GAAejF,EAAAA,EAAAA,IAAOkF,EAAAA,EAAPlF,CAAcmF,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,wEAM5B,SAASiF,EAAM/E,GAAyB,IAAxB,SAAEgF,EAAQ,QAAEC,GAASjF,EAC1C,MAAMgC,GAAWC,EAAAA,EAAAA,MACXiD,GAAc3D,EAAAA,EAAAA,KAAaC,GAAUA,EAAM2D,YAAYC,cAE7D,SAASC,EAAO7D,GAEZQ,EADEkD,IAAgB1D,GACT8D,EAAAA,EAAAA,SAAaC,IAEbD,EAAAA,EAAAA,IAAa9D,IAGxByD,EAAQC,IAAgB1D,OAAQ+D,EAAY/D,EAC9C,CAEA,OACEU,EAAAA,EAAAA,MAAC8B,EAAS,CAAAvD,SAAA,EACRyB,EAAAA,EAAAA,MAACwC,EAAe,CAAAjE,SAAA,EACdP,EAAAA,EAAAA,KAACyE,EAAW,CAAAlE,SAAC,sFACbP,EAAAA,EAAAA,KAAC0E,EAAY,CACXY,UAA4B,SAAhBN,GACZO,SAAUA,IAAMJ,EAAO,QACvBL,SAAUA,QAGd9C,EAAAA,EAAAA,MAACwC,EAAe,CAAAjE,SAAA,EACdP,EAAAA,EAAAA,KAACyE,EAAW,CAAAlE,SAAC,gFACbP,EAAAA,EAAAA,KAAC0E,EAAY,CACXY,UAA4B,UAAhBN,GACZO,SAAUA,IAAMJ,EAAO,SACvBL,SAAUA,SAKpB,C,wCChDA,MAAMU,EAAa/F,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kKASvB6F,EAAiBhG,EAAAA,GAAOmB,IAAGG,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0DAI3B8F,EAAejG,EAAAA,GAAOkG,OAAMzE,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,uSAgBrBiC,GAAgB+D,EAAAA,EAAAA,iBAEd,SAASC,KACtB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GAEvClE,GAAWC,EAAAA,EAAAA,MAEXiD,GAAc3D,EAAAA,EAAAA,KAAaC,GAAUA,EAAM2D,YAAYC,cACvDiB,GAAa9E,EAAAA,EAAAA,KAAaC,GAAUA,EAAM8E,WAAWA,aAkC3D,OACEpG,EAAAA,EAAAA,KAAC6B,EAAcwE,SAAQ,CAAC5D,MAAOsD,EAAcxF,UAC3CyB,EAAAA,EAAAA,MAACwD,EAAU,CAAAjF,SAAA,EACTyB,EAAAA,EAAAA,MAACyD,EAAc,CAAAlF,SAAA,EACbP,EAAAA,EAAAA,KAACsG,EAAAA,GAAK,CACJ7D,MAAO0D,EACPI,cAAgBC,GAAM1E,GAAS2E,EAAAA,EAAAA,IAAYD,EAAEE,OAAOjE,WAEtDzC,EAAAA,EAAAA,KAAC0F,EAAY,CAACX,QAxCtB,WACE,MAAMzB,EAAS,IAAIqD,IAAI3C,EAAAA,GACJ,KAAfmC,GACF7C,EAAOsD,aAAaC,IAAI,SAAUV,GAEhCnB,GACF1B,EAAOsD,aAAaC,IAAI,WAAY7B,GAGtC,MAAM8B,EAAexD,EAAOyD,WACxBD,IAAiBhB,IACnBC,EAAce,GACdhF,GAASkF,EAAAA,EAAAA,OACTlF,GAASmF,EAAAA,EAAAA,OAEb,EAyB4CnC,SAAUmB,EAAW1F,SAAC,uCAI5DP,EAAAA,EAAAA,KAAC6E,EAAM,CAACC,SAAUmB,EAAYlB,QA3BdmC,IACpB,MAAM5D,EAAS,IAAIqD,IAAI3C,EAAAA,GACJ,KAAfmC,GACF7C,EAAOsD,aAAaC,IAAI,SAAUV,GAEhCe,GACF5D,EAAOsD,aAAaC,IAAI,WAAYK,GAGtC,MAAMJ,EAAexD,EAAOyD,WAC5BhB,EAAce,GACdhF,GAASkF,EAAAA,EAAAA,OACTlF,GAASmF,EAAAA,EAAAA,MAAgB,KAgBrBjH,EAAAA,EAAAA,KAAC+D,EAAc,CAACC,IAAK8B,EAAY7B,SAAUiC,QAInD,C","sources":["Pages/main/components/ProductCardView.jsx","Pages/main/components/ProductsList.jsx","Pages/main/components/LoadingSkeletonView.jsx","Pages/main/components/ProductsSearch.jsx","Pages/main/components/Filter.jsx","Pages/main/MainPage.jsx"],"sourcesContent":["import { Card } from \"antd\";\r\nimport Meta from \"antd/es/card/Meta\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 200px;\r\n  background: var(--black);\r\n  border: 2px solid var(--green);\r\n  box-sizing: content-box;\r\n\r\n  .ant-card-meta-detail {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .ant-card-body {\r\n    border-top: 2px solid var(--green);\r\n  }\r\n\r\n  .ant-card-meta-title {\r\n    color: var(--orange);\r\n  }\r\n`;\r\n\r\nexport function ProductCardView({ data }) {\r\n  return (\r\n    <StyledCard\r\n      cover={\r\n        <img\r\n          width={200}\r\n          height={200}\r\n          alt=\"product_image\"\r\n          src={data.set_img_url}\r\n        />\r\n      }\r\n    >\r\n      <Meta title={data.name} />\r\n    </StyledCard>\r\n  );\r\n}\r\n\r\nProductCardView.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { decreasePage, increasePage } from \"../../../features/pageCounter\";\r\nimport { useContext } from \"react\";\r\nimport { UrlSetContext } from \"../MainPage\";\r\nimport { ProductCardView } from \"./ProductCardView\";\r\nimport { Paginator } from \"../../../Components/Paginator\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\nconst ProductsCount = styled.p`\r\n  color: var(--green);\r\n  margin-top: 0px;\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  margin: 10px;\r\n  text-decoration: none;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    cursor: pointer;\r\n    transform: perspective(100px) translateZ(10px);\r\n  }\r\n`;\r\n\r\nexport function ProductsList() {\r\n  const pageSlice = useSelector((state) => state.page.page);\r\n  const responseSlice = useSelector((state) => state.response.responses);\r\n  const setNewUrl = useContext(UrlSetContext);\r\n  const dispatch = useDispatch();\r\n\r\n  function buttonDecreasedClick() {\r\n    if (pageSlice === 1) {\r\n      return;\r\n    }\r\n    dispatch(decreasePage());\r\n  }\r\n\r\n  function buttonIncreasedClick() {\r\n    let newUrl = responseSlice[pageSlice].next;\r\n    if (newUrl === null) {\r\n      return;\r\n    }\r\n    setNewUrl(newUrl);\r\n    dispatch(increasePage());\r\n  }\r\n\r\n  if (!responseSlice[pageSlice]) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProductsCount>{`Показано ${\r\n        (pageSlice - 1) * 10 + responseSlice[pageSlice].results.length\r\n      } из ${responseSlice[pageSlice].count} товаров`}</ProductsCount>\r\n      {responseSlice[pageSlice].count === 0 ? (\r\n        <ProductsCount style={{ color: \"var(--orange)\" }}>\r\n          Увы, по данному запросу ничего не найдено.\r\n        </ProductsCount>\r\n      ) : (\r\n        <ListContainer>\r\n          {responseSlice[pageSlice].results.map((value, index) => {\r\n            let link = `${pageSlice}/${value.set_num}`;\r\n\r\n            return (\r\n              <StyledLink\r\n                style={{\r\n                  margin: 10,\r\n                  textDecoration: \"none\",\r\n                  outline: \"none\",\r\n                }}\r\n                key={value.set_num}\r\n                to={link}\r\n              >\r\n                <ProductCardView data={value} />\r\n              </StyledLink>\r\n            );\r\n          })}\r\n        </ListContainer>\r\n      )}\r\n      <Paginator\r\n        counter={pageSlice}\r\n        leftCircleFunction={buttonDecreasedClick}\r\n        rightCircleFunction={buttonIncreasedClick}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ProductSkeletonView } from \"../../../Components/ProductSkeletonView\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\nconst style = {\r\n  width: \"200px\",\r\n  height: \"260px\",\r\n  border: \"2px solid var(--green)\",\r\n  borderRadius: \"8px\",\r\n  margin: \"10px\",\r\n  overflow: \"hidden\",\r\n};\r\n\r\nexport function LoadingSkeletonView() {\r\n  return (\r\n    <ListContainer>\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n      <ProductSkeletonView style={style} />\r\n    </ListContainer>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useGetProductsQuery } from \"../../../features/baseApi\";\r\nimport { addPageWithStructures } from \"../../../features/serverResponse\";\r\nimport { useEffect } from \"react\";\r\nimport { ProductsList } from \"./ProductsList\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingSkeletonView } from \"./LoadingSkeletonView\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport function ProductsSearch({ url, setFetch }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const pageSlice = useSelector((state) => state.page.page);\r\n  const responseSlice = useSelector((state) => state.response.responses);\r\n\r\n  const { data, error, isFetching } = useGetProductsQuery(url, {\r\n    skip: !!(!url || responseSlice[pageSlice]),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch(addPageWithStructures({ page: pageSlice, data: data }));\r\n    }\r\n  }, [data]);\r\n  useEffect(() => {\r\n    setFetch(isFetching);\r\n  }, [isFetching]);\r\n\r\n  return (\r\n    <Container>\r\n      {error ? (\r\n        <p style={{ color: \"var(--green)\" }}>Oh no, there was an error</p>\r\n      ) : isFetching ? (\r\n        <LoadingSkeletonView />\r\n      ) : (\r\n        <ProductsList />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nProductsSearch.propTypes = {\r\n  url: PropTypes.string,\r\n  setFetch: PropTypes.func,\r\n};\r\n","import { Switch } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { changeFilter } from \"../../../features/filterStore\";\r\nimport { useEffect, useMemo } from \"react\";\r\n\r\nconst SwitchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0px 10px 0px 10px;\r\n`;\r\nconst SwitchTitle = styled.p`\r\n  color: var(--orange);\r\n  margin-right: 10px;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\nconst StyledSwitch = styled(Switch)`\r\n  &.ant-switch-checked {\r\n    background: var(--green);\r\n  }\r\n`;\r\n\r\nexport function Filter({ disabled, onClick }) {\r\n  const dispatch = useDispatch();\r\n  const filterSlice = useSelector((state) => state.filterStore.filterState);\r\n\r\n  function filter(state) {\r\n    if (filterSlice === state) {\r\n      dispatch(changeFilter(undefined));\r\n    } else {\r\n      dispatch(changeFilter(state));\r\n    }\r\n\r\n    onClick(filterSlice === state ? undefined : state);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SwitchContainer>\r\n        <SwitchTitle>Сначала старые:</SwitchTitle>\r\n        <StyledSwitch\r\n          checked={!!(filterSlice === \"year\")}\r\n          onChange={() => filter(\"year\")}\r\n          disabled={disabled}\r\n        />\r\n      </SwitchContainer>\r\n      <SwitchContainer>\r\n        <SwitchTitle>Сначала новые:</SwitchTitle>\r\n        <StyledSwitch\r\n          checked={!!(filterSlice === \"-year\")}\r\n          onChange={() => filter(\"-year\")}\r\n          disabled={disabled}\r\n        />\r\n      </SwitchContainer>\r\n    </Container>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport { Filter, ProductsSearch } from \"./components\";\r\nimport { url } from \"../../utils/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetPage } from \"../../features/pageCounter\";\r\nimport { Input } from \"../../Components\";\r\nimport { resetResponse } from \"../../features/serverResponse\";\r\nimport styled from \"styled-components\";\r\nimport { changeInput } from \"../../features/inputStore\";\r\n\r\nconst StyledMain = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  max-width: 1120px;\r\n  width: 100%;\r\n  margin: auto;\r\n`;\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  margin: 30px 0px 20px 0px;\r\n`;\r\nconst StyledButton = styled.button`\r\n  outline: none;\r\n  border: 1px solid var(--orange);\r\n  background: var(--orange);\r\n  height: 32px;\r\n  box-sizing: border-box;\r\n  border-radius: 0px 6px 6px 0px;\r\n\r\n  &:hover,\r\n  &:focus-visible {\r\n    cursor: pointer;\r\n    border: 1px solid var(--green);\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const UrlSetContext = createContext();\r\n\r\nexport default function MainPage() {\r\n  const [currentURL, setCurrentURL] = useState(\"\");\r\n  const [checkFetch, setCheckFetch] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const filterSlice = useSelector((state) => state.filterStore.filterState);\r\n  const inputSlice = useSelector((state) => state.inputStore.inputStore);\r\n\r\n  function handleClick() {\r\n    const newUrl = new URL(url);\r\n    if (inputSlice !== \"\") {\r\n      newUrl.searchParams.set(\"search\", inputSlice);\r\n    }\r\n    if (filterSlice) {\r\n      newUrl.searchParams.set(\"ordering\", filterSlice);\r\n    }\r\n\r\n    const newUrlString = newUrl.toString();\r\n    if (newUrlString !== currentURL) {\r\n      setCurrentURL(newUrlString);\r\n      dispatch(resetPage());\r\n      dispatch(resetResponse());\r\n    }\r\n  }\r\n\r\n  const handleChange = (newFilter) => {\r\n    const newUrl = new URL(url);\r\n    if (inputSlice !== \"\") {\r\n      newUrl.searchParams.set(\"search\", inputSlice);\r\n    }\r\n    if (newFilter) {\r\n      newUrl.searchParams.set(\"ordering\", newFilter);\r\n    }\r\n\r\n    const newUrlString = newUrl.toString();\r\n    setCurrentURL(newUrlString);\r\n    dispatch(resetPage());\r\n    dispatch(resetResponse());\r\n  };\r\n\r\n  return (\r\n    <UrlSetContext.Provider value={setCurrentURL}>\r\n      <StyledMain>\r\n        <InputContainer>\r\n          <Input\r\n            value={inputSlice}\r\n            onChangeValue={(e) => dispatch(changeInput(e.target.value))}\r\n          />\r\n          <StyledButton onClick={handleClick} disabled={checkFetch}>\r\n            Поиск\r\n          </StyledButton>\r\n        </InputContainer>\r\n        <Filter disabled={checkFetch} onClick={handleChange} />\r\n        <ProductsSearch url={currentURL} setFetch={setCheckFetch} />\r\n      </StyledMain>\r\n    </UrlSetContext.Provider>\r\n  );\r\n}\r\n"],"names":["StyledCard","styled","Card","_templateObject","_taggedTemplateLiteral","ProductCardView","_ref","data","_jsx","cover","width","height","alt","src","set_img_url","children","Meta","title","name","ListContainer","div","ProductsCount","p","_templateObject2","StyledLink","Link","_templateObject3","ProductsList","pageSlice","useSelector","state","page","responseSlice","response","responses","setNewUrl","useContext","UrlSetContext","dispatch","useDispatch","_jsxs","_Fragment","concat","results","length","count","style","color","map","value","index","link","set_num","margin","textDecoration","outline","to","Paginator","counter","leftCircleFunction","decreasePage","rightCircleFunction","newUrl","next","increasePage","border","borderRadius","overflow","LoadingSkeletonView","ProductSkeletonView","Container","ProductsSearch","url","setFetch","error","isFetching","useGetProductsQuery","skip","useEffect","addPageWithStructures","SwitchContainer","SwitchTitle","StyledSwitch","Switch","_templateObject4","Filter","disabled","onClick","filterSlice","filterStore","filterState","filter","changeFilter","undefined","checked","onChange","StyledMain","InputContainer","StyledButton","button","createContext","MainPage","currentURL","setCurrentURL","useState","checkFetch","setCheckFetch","inputSlice","inputStore","Provider","Input","onChangeValue","e","changeInput","target","URL","searchParams","set","newUrlString","toString","resetPage","resetResponse","newFilter"],"sourceRoot":""}