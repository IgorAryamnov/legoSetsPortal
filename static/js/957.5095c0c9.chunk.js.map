{"version":3,"file":"static/js/957.5095c0c9.chunk.js","mappings":"sNAOe,SAASA,IAAuB,IAADC,EAAAC,EAC5C,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,KACnBC,GAAUA,EAAMC,iBAAiBA,mBAE9BC,GAAsBH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMG,SAASA,WAC5DC,GAAaL,EAAAA,EAAAA,KAAaC,GAAUA,EAAMK,IAAIC,aAC9CC,GAAmBR,EAAAA,EAAAA,KACtBC,GAAUA,EAAMQ,YAAYC,mBAAmBjB,KAG5CkB,EAA8C,QAAjCpB,EAAGQ,EAAcM,EAAWO,aAAK,IAAArB,OAAA,EAA9BA,EAAgCsB,MACnDC,GAAUA,EAAMC,UAAYtB,KAGzB,KAAEuB,EAAI,MAAEC,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,IAClC,4CAA8C1B,EAC9C,CAAE2B,OAAQT,KAAmBH,IAGzBa,EAAoD,QAAvC7B,EAAGW,EAAoBE,EAAWO,aAAK,IAAApB,OAAA,EAApCA,EAAsCqB,MACzDC,GAAUA,IAAUrB,IAcvB,OAXA6B,EAAAA,EAAAA,YAAU,KACJN,GACFrB,GAAS4B,EAAAA,EAAAA,IAAiBP,GAC5B,GACC,CAACA,KACJQ,EAAAA,EAAAA,kBAAgB,KACTnB,EAAWO,MACdf,EAAS,iBACX,GACC,CAACQ,KAGFoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGV,GACCQ,EAAAA,EAAAA,KAAA,KACEG,MAAO,CAAEC,MAAO,eAAgBC,UAAW,SAAUC,UAAW,IAAKJ,SACtE,8BAGCT,GACFO,EAAAA,EAAAA,KAAA,KACEG,MAAO,CAAEC,MAAO,eAAgBC,UAAW,SAAUC,UAAW,IAAKJ,SACtE,gBAIDF,EAAAA,EAAAA,KAACO,EAAAA,GAAe,CACdhB,KAAML,GAAiBH,GAAoBQ,EAC3CiB,aAAcZ,EACdhB,WAAYA,KAKtB,C","sources":["Pages/favoriteProduct/FavoriteProductPage.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { ProductPageData } from \"../../Components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useLayoutEffect } from \"react\";\r\nimport { useGetFavoriteProductQuery } from \"../../features/baseApi\";\r\nimport { addToSingleStore } from \"../../features/singleProductStore\";\r\n\r\nexport default function FavoriteProductPage() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const favoriteSlice = useSelector(\r\n    (state) => state.favoriteProducts.favoriteProducts\r\n  );\r\n  const globalFavoriteSlice = useSelector((state) => state.favorite.favorite);\r\n  const loginSlice = useSelector((state) => state.log.loginState);\r\n  const singleStoreSlice = useSelector(\r\n    (state) => state.singleStore.singleProductStore[id]\r\n  );\r\n\r\n  const dataFromStore = favoriteSlice[loginSlice.user]?.find(\r\n    (value) => value.set_num === id\r\n  );\r\n\r\n  const { data, error, isFetching } = useGetFavoriteProductQuery(\r\n    \"https://rebrickable.com/api/v3/lego/sets/\" + id,\r\n    { skip: !!dataFromStore || !!singleStoreSlice }\r\n  );\r\n\r\n  const favoriteCheck = globalFavoriteSlice[loginSlice.user]?.find(\r\n    (value) => value === id\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch(addToSingleStore(data));\r\n    }\r\n  }, [data]);\r\n  useLayoutEffect(() => {\r\n    if (!loginSlice.user) {\r\n      navigate(\"/authorization\");\r\n    }\r\n  }, [loginSlice]);\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <p\r\n          style={{ color: \"var(--green)\", textAlign: \"center\", marginTop: 20 }}\r\n        >\r\n          Oh no, there was an error\r\n        </p>\r\n      ) : isFetching ? (\r\n        <p\r\n          style={{ color: \"var(--green)\", textAlign: \"center\", marginTop: 20 }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : (\r\n        <ProductPageData\r\n          data={dataFromStore || singleStoreSlice || data}\r\n          inFavorite={!!favoriteCheck}\r\n          loginSlice={loginSlice}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["FavoriteProductPage","_favoriteSlice$loginS","_globalFavoriteSlice$","id","useParams","dispatch","useDispatch","navigate","useNavigate","favoriteSlice","useSelector","state","favoriteProducts","globalFavoriteSlice","favorite","loginSlice","log","loginState","singleStoreSlice","singleStore","singleProductStore","dataFromStore","user","find","value","set_num","data","error","isFetching","useGetFavoriteProductQuery","skip","favoriteCheck","useEffect","addToSingleStore","useLayoutEffect","_jsx","_Fragment","children","style","color","textAlign","marginTop","ProductPageData","inFavorite"],"sourceRoot":""}